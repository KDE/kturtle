<chapter id="Glossary">
<title
>Glossário</title>

<para
>Neste capítulo, você irá obter uma explicação para a maioria das palavras <quote
>pouco comuns</quote
> que são usadas no manual.</para>

<glosslist>
<glossentry id="degrees">
<glossterm
>graus</glossterm>
<glossdef
><para
>Os graus são uma unidade para medir ângulos ou voltas. Uma volta completa corresponde a 360 graus, o que corresponde a uma meia-volta como 180 graus e um quarto-de-volta como 90 graus. Os comandos <userinput
>turnleft</userinput
>, <userinput
>turnright</userinput
> e <userinput
>direction</userinput
> necessitam de um parâmetro em graus.</para
></glossdef>
</glossentry>

<glossentry id="input-output">
<glossterm
>parâmetros e resultado dos comandos</glossterm>
<glossdef
><para
>Alguns comandos recebem parâmetros, outros devolvem resultados, outros fazem <emphasis
>ambas</emphasis
> as coisas e finalmente existem outros que não fazem nenhuma delas.</para>
<para
>Alguns exemplos de comandos que só recebem parâmetros são: <screen>
forward 50
pencolor 255,0,0
print "olá!"
</screen
> O comando <userinput
>forward</userinput
> recebe o <userinput
>50</userinput
> como parâmetro, porque o <userinput
>forward</userinput
> precisa deste parâmetro para saber quantos <glossterm linkend="pixels"
>pontos</glossterm
> deverá andar em frente. O <userinput
>pencolor</userinput
> recebe um parâmetro e o <userinput
>print</userinput
> recebe uma cadeia de caracteres com parâmetro. Lembre-se que o parâmetro também poderá ser um contentor. O próximo exemplo ilustra isto: <screen
>$x = 50
print $x
forward 50
$texto = "olá!"
print $texto
</screen
></para>

<para
>Agora alguns exemplos de comandos que devolvam resultados: <screen>
$x = inputwindow "por favor escreva algo e carregue em OK... obrigado!"
$r = random 1,100
</screen
> O comando <userinput
>inputwindow</userinput
> recebe um texto como parâmetro e devolve o número ou o texto que é introduzido. Como poderá ver, o resultado do <userinput
>inputwindow</userinput
> é guardado no contentor <userinput
>x</userinput
>. O comando <userinput
>random</userinput
> também devolve um resultado. Neste caso, devolve um número entre 1 e 100. O resultado do <userinput
>random</userinput
> é de novo guardado num contentor, chamado <userinput
>r</userinput
>. Lembre-se que os contentores <userinput
>x</userinput
> e <userinput
>r</userinput
> não são usados no código de exemplo acima.</para>

<para
>Também há alguns comandos que não precisam de parâmetros nem devolvem nada. Alguns exemplos: <screen
>clear
penup
</screen>
</para
></glossdef>
</glossentry>

<glossentry id="intuitive-highlighting">
<glossterm
>realce intuitivo</glossterm>
<glossdef
><para
>Esta é uma funcionalidade do &kturtle; que torna a codificação ainda mais simples. Com o realce intuitivo, o código que você escrever ganha uma cor que indica qual o tipo de código que é. Na próxima lista, você irá encontrar os diferentes tipos de código e a cor que obtêm no <link linkend="the-editor"
>editor</link
>. <table>
<title
>Os diferentes tipos de código e a sua cor de realce</title>
<tgroup cols="3">
<tbody>
<row>
<entry
>comandos normais</entry>
<entry
>azul escuro</entry>
<entry
>Os comandos normais estão descritos <link linkend="commands"
>aqui</link
>.</entry>
</row>
<row>
<entry
>Comandos de controlo da execução</entry>
<entry
>preto (negrito)</entry>
<entry
>Estes comandos especiais controlam a execução; poderá ler mais sobre eles <link linkend="controlling-execution"
>aqui</link
>.</entry>
</row>
<row>
<entry
>comentários</entry>
<entry
>cinzento</entry>
<entry
>As linhas que estão comentadas começam por caracteres de comentário (#); estas linhas são ignoradas quando o código é executado. Os comentários permitem ao programador explicar um pouco do seu código ou podem ser usadas para evitar temporariamente que um pedaço de código seja executado.</entry>
</row>
<row>
<entry
>chavetas {, }</entry>
<entry
>verde escuro (negrito)</entry>
<entry
>Os parêntesis rectos são usados para agrupar pedaços de código. Os parêntesis rectos são usados normalmente com os <link linkend="controlling-execution"
>controladores de execução</link
>.</entry>
</row>
<row>
<entry
>o comando <link linkend="learn"
>learn</link
></entry>
<entry
>verde claro (negrito)</entry>
<entry
>O comando <link linkend="learn"
>learn</link
> é usado para criar comandos novos.</entry>
</row>
<row>
<entry
>texto</entry>
<entry
>vermelho</entry>
<entry
>Também não há muito a dizer sobre o texto nas cadeias de caracteres, a não ser que começam e terminam com aspas (").</entry>
</row>
<row>
<entry
>números</entry>
<entry
>vermelho escuro</entry>
<entry
>Os números não têm muito que se lhe diga.</entry>
</row>
<row>
<entry
>valores booleanos</entry>
<entry
>vermelho escuro</entry>
<entry
>Existem exactamente dois valores booleanos: verdadeiro e falso.</entry>
</row>
<row>
<entry
>variáveis</entry>
<entry
>púrpura</entry>
<entry
>Começa com um '$' e poderá conter números, textos ou valores booleanos.</entry>
</row>
<row>
<entry
>operadores matemáticos</entry>
<entry
>cinzento</entry>
<entry
>Estes são os operadores matemáticos: <userinput
>+</userinput
>, <userinput
>-</userinput
>, <userinput
>*</userinput
>, <userinput
>/</userinput
> e <userinput
>^</userinput
>.</entry>
</row>
<row>
<entry
>operadores de comparação</entry>
<entry
>azul claro (negrito)</entry>
<entry
>Estes são os operadores de comparação: <userinput
>==</userinput
>, <userinput
>!=</userinput
>, <userinput
>&lt;</userinput
>, <userinput
>&gt;</userinput
>, <userinput
>&lt;=</userinput
> e <userinput
>&gt;=</userinput
>.</entry>
</row>
<row>
<entry
>operadores booleanos</entry>
<entry
>rosa (negrito)</entry>
<entry
>Estes são os operadores booleanos: <userinput
>and</userinput
>, <userinput
>or</userinput
> e <userinput
>not</userinput
>.</entry>
</row>
<row>
<entry
>texto normal</entry>
<entry
>preto</entry>
<entry
></entry>
</row>
</tbody>
</tgroup>
</table>
</para
></glossdef>
</glossentry>

<glossentry id="pixels">
<glossterm
>pontos</glossterm>
<glossdef
><para
>Um ponto é um ponto no ecrã. Se você olhar muito de perto para o que vê no ecrã do seu monitor, irá constatar que ele usa pontos. Todas as imagens do ecrã são criadas com estes pontos. Um ponto é a menor coisa que poderá ser desenhada no ecrã.</para>
<para
>Existem vários comandos que precisam de uma quantidade de pontos como parâmetro, e são: o <userinput
>forward</userinput
>, <userinput
>backward</userinput
>, <userinput
>go</userinput
>, <userinput
>gox</userinput
>, <userinput
>goy</userinput
>, <userinput
>canvassize</userinput
> e o <userinput
>penwidth</userinput
>.</para>
<para
>Nas versões anteriores do &kturtle;, a área de desenho era uma imagem rasterizada; agora, nas versões mais recentes, é um desenho vectorial. Isto significa que a área de desenho poderá ser ampliada ou reduzida, pelo que um ponto na área de desenho não corresponderá necessariamente a um ponto no ecrã.</para>
</glossdef>
</glossentry>

<glossentry id="rgb">
<glossterm
>Combinações de RGB (códigos de cores)</glossterm>
<glossdef
><para
>As combinações de RGB são usadas para descrever cores. O <quote
>R</quote
> vem de <quote
>red</quote
> (vermelho), o <quote
>G</quote
> de <quote
>green</quote
> (verde) e o <quote
>B</quote
> de <quote
>blue</quote
> (azul). Um exemplo de uma combinação RGB é o <userinput
>255,0,0</userinput
>, onde o valor da componente vermelha é 255 e as outras são 0, o que resulta num tom claro de vermelho. Cada valor de uma combinação RGB terá de estar no intervalo entre 0 e 255. Aqui está uma lista com as cores mais usadas: <table frame="none">
<title
>Combinações RGB mais usadas</title>
<tgroup cols="2" colsep="5" rowsep="1">
<colspec colname="c1"/>
<tbody>
<row
><entry
><userinput
>0,0,0</userinput
></entry
><entry
>preto</entry
></row>
<row
><entry
><userinput
>255,255,255</userinput
></entry
><entry
>branco</entry
></row>
<row
><entry
><userinput
>255,0,0</userinput
></entry
><entry
>vermelho</entry
></row>
<row
><entry
><userinput
>150,0,0</userinput
></entry
><entry
>vermelho escuro</entry
></row>
<row
><entry
><userinput
>0,255,0</userinput
></entry
><entry
>verde</entry
></row>
<row
><entry
><userinput
>0,0,255</userinput
></entry
><entry
>azul</entry
></row>
<row
><entry
><userinput
>0,255,255</userinput
></entry
><entry
>azul claro</entry
></row>
<row
><entry
><userinput
>255,0,255</userinput
></entry
><entry
>cor de rosa</entry
></row>
<row
><entry
><userinput
>255,255,0</userinput
></entry
><entry
>amarelo</entry
></row>
</tbody>
</tgroup>
</table>
</para>
<para
>Dois comandos necessitam de uma combinação RGB como parâmetro, e são eles: o <userinput
>canvascolor</userinput
> e o <userinput
>pencolor</userinput
>.</para
></glossdef>
</glossentry>

<glossentry id="sprite">
<glossterm
>imagem móvel</glossterm>
<glossdef
><para
>Uma imagem móvel é uma pequena imagem que pode ser movida pelo ecrã. A nossa tartaruga é uma imagem móvel, por exemplo.</para>
<para
>Nota: com esta versão do &kturtle;, a imagem móvel não consegue ser alterada de uma tartaruga para outra coisa. As versões futuras do &kturtle; serão capazes de o fazer.</para
></glossdef>
</glossentry>

</glosslist>

</chapter>
